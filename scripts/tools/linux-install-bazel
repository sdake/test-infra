#!/bin/bash

if [[ "$(uname)" != "Linux" ]]; then
  echo "Run on Linux only."
  exit 1
fi

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
# shellcheck disable=SC1090
. "${DIR}"/all-utilities || { echo "Cannot load Bash utilities" ; exit 1 ; }

# Use Bazelisk launcher for Bazel (automatically downloads required version of Bazel).
BAZELISK_VERSION="v1.0"
BAZELISK_BASE_URL="https://github.com/bazelbuild/bazelisk/releases/download"
BAZELISK_BIN="bazelisk-linux-amd64"
BAZELISK_URL="${BAZELISK_BASE_URL}/${BAZELISK_VERSION}/${BAZELISK_BIN}"
BAZELISK_DIRECTORY="${TOOLS_DIR}/bazelisk"

function update_bazel() {
  # shellcheck disable=SC2155
  local bazel_current="$(bazel version | grep -oh 'Bazelisk version: v[0-9]*\.[0-9]*')" \
    || bazel_current='none'

  if [[ "${BAZELISK_VERSION}" != "${bazel_current}" ]]; then
    mkdir -p "${BAZELISK_DIRECTORY}"
    retry -n 3 wget -q -nc -P "${BAZELISK_DIRECTORY}" "${BAZELISK_URL}" \
      || error_exit "Could not download bazelisk"
    ${SUDO} chmod +x "${BAZELISK_DIRECTORY}/${BAZELISK_BIN}" \
      || error_exit "Could not mark bazelisk binary as executable"
    ${SUDO} mv "${BAZELISK_DIRECTORY}/${BAZELISK_BIN}" "/usr/local/bin/bazel" \
      || error_exit "Could not install bazelisk"
    set_bazel
  fi

  # Preload Bazel versions that we know are needed.
  USE_BAZEL_VERSION=0.22.0 ${BAZEL} version # release-1.1
  USE_BAZEL_VERSION=0.26.1 ${BAZEL} version # release-1.2
  USE_BAZEL_VERSION=0.28.1 ${BAZEL} version # release-1.3
  USE_BAZEL_VERSION=1.0.0 ${BAZEL} version # release-1.4

  ${SUDO} "${BAZEL}" shutdown
  ${SUDO} rm -rf "${HOME}"/.cache/bazel
  echo 'Bazelisk up-to-date.'
}
