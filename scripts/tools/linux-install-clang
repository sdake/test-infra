#!/bin/bash
# May require sudo login.

if [[ "$(uname)" != "Linux" ]]; then
  echo "Run on Linux only."
  exit 1
fi

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
# shellcheck disable=SC1090
. "${DIR}"/all-utilities || { echo "Cannot load Bash utilities" ; exit 1 ; }


LLVM_BINNAME="9"
LLVM_VERSION="9.0.0"
LLVM_TARGET="x86_64-linux-gnu-ubuntu-16.04"

LLVM_BASE_URL="http://releases.llvm.org/${LLVM_VERSION}"
LLVM_ARCHIVE="clang+llvm-${LLVM_VERSION}-${LLVM_TARGET}"
LLVM_URL="${LLVM_BASE_URL}/${LLVM_ARCHIVE}.tar.xz"
LLVM_DOWNLOAD_DIRECTORY="${TOOLS_DIR}/clang+llvm"
LLVM_DIRECTORY="/usr/lib/llvm-9"

function install_clang() {
  mkdir -p "${LLVM_DOWNLOAD_DIRECTORY}"
  retry -n 3 wget -q -nc -P "${LLVM_DOWNLOAD_DIRECTORY}" "${LLVM_URL}" \
      || error_exit 'Could not download clang+llvm.'
  ${SUDO} mkdir -p "${LLVM_DIRECTORY}"
  ${SUDO} tar -C ${LLVM_DIRECTORY} -xJf "${LLVM_DOWNLOAD_DIRECTORY}/${LLVM_ARCHIVE}.tar.xz" \
      || error_exit 'Could not unpack clang+llvm.'

  ${SUDO} mv ${LLVM_DIRECTORY}/${LLVM_ARCHIVE}/* ${LLVM_DIRECTORY}/
  ${SUDO} rmdir ${LLVM_DIRECTORY}/${LLVM_ARCHIVE}/

  echo "${LLVM_DIRECTORY}/lib" | ${SUDO} tee /etc/ld.so.conf.d/llvm.conf
  ${SUDO} ldconfig

  echo 'clang+llvm installed.'
}

function update_clang() {
  if [[ ! -x "$(command -v clang-${LLVM_BINNAME})" ]]; then
    retry install_clang || error_exit 'Cannot install clang+llvm.'
  fi
  echo 'clang+llvm is up to date.'
}
